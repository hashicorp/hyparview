* What's This?

- Rogue project (aka push directly to master), proof of concept
- Partial membership for gossip clusters
- 10k node cluster requires 5 active and 30 passive peers in views at
  each node
- >90% of members have to fail before manual intervention is required
  to restore the cluster
- [[https://www.semanticscholar.org/paper/HyParView%253A-A-Membership-Protocol-for-Reliable-Leit%C3%A3o-Pereira/a2562ede25e8ed2c7c1d888d72b625a526b3b25a][Paper]] in production in [[http://partisan.cloud][Partisan]]
- Side goal: demonstrate separation of state changes from async or
  mutex behavior to improve testing options

* Live Test

There's an example secure GRPC application of this library at
[[https://github.com/hashicorp/hyparview-example][hyparview-example]]. It will be used for a live test on hardware.

* Roadmap

- [X] Rename active, it defines both windows
- [X] Unique types for all the messages, for grpc
- [X] RecvShuffle
- [-] Client simulation v0
  - [X] Graph connection test
  - [X] Intermittent failures
  - [X] Keep the random seed for replay
  - [X] Gossip application
  - [ ] Active view maintenance
- [ ] Live client example
  - [ ] grpc
  - [ ] TLS

* Simulation

- [X] Create & join nodes
: ActiveSize * RWL.Active ForwardJoinRequests => 30
- [X] Shuffle
: 1 + RWL.Shuffle + ShuffleReply => 8 (needs 9...)
- [X] Maintain active view (rejoin when empty)
- [X] Active failures
- [X] Request failures
